microservice-chart:
  namespace: "pay-wallet"
  nameOverride: ""
  fullnameOverride: "pagopa-pay-wallet-cdc-service"
  image:
    repository: pagopaditncoreacr.azurecr.io/pagopapaymentwalletcdcservice
    tag: "0.14.2"
    pullPolicy: Always
  livenessProbe:
    httpGet:
      path: /actuator/health/liveness
      port: 8080
    initialDelaySeconds: 60
    failureThreshold: 6
    periodSeconds: 10
  readinessProbe:
    httpGet:
      path: /actuator/health/readiness
      port: 8080
    initialDelaySeconds: 60
    failureThreshold: 6
    periodSeconds: 10
  deployment:
    create: true
  service:
    create: true
    type: ClusterIP
    ports:
      - 8080
  ingress:
    create: true
    host: "itndev.pay-wallet.internal.dev.platform.pagopa.it"
    path: /pagopa-payment-wallet-cdc-service/(.*)
    servicePort: 8080
  serviceAccount:
    create: false
    annotations: { }
    name: ""
  podAnnotations: { }
  podSecurityContext:
    seccompProfile:
      type: RuntimeDefault
  securityContext:
    allowPrivilegeEscalation: false
  resources:
    requests:
      memory: "512Mi"
      cpu: "300m"
    limits:
      memory: "512Mi"
      cpu: "300m"
  autoscaling:
    enable: false
    minReplica: 1
    maxReplica: 10
    pollingInterval: 10 # seconds
    cooldownPeriod: 50 # seconds
    triggers:
      - type: cpu
        metadata:
          type: Utilization # Allowed types are 'Utilization' or 'AverageValue'
          value: "75"
  terminationGracePeriodSeconds: 30
  strategy:
    type: "RollingUpdate"
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  envConfig:
    OTEL_SERVICE_NAME: "pagopa-payment-wallet-cdc-service"
    OTEL_SERVICE_ENVIRONMENT: "dev"
    OTEL_RESOURCE_ATTRIBUTES: "deployment.environment=dev"
    OTEL_EXPORTER_OTLP_ENDPOINT: "https://weudev.kibana.internal.dev.platform.pagopa.it/apm"
    OTEL_EXPORTER_OTLP_PROTOCOL: http/protobuf
    OTEL_TRACES_EXPORTER: otlp
    OTEL_METRICS_EXPORTER: otlp
    OTEL_LOGS_EXPORTER: otlp
    OTEL_TRACES_SAMPLER: "always_on"
<<<<<<< HEAD
    EXPIRATION_QUEUE_NAME: pagopa-d-itn-pay-wallet-cdc-queue
    EXPIRATION_QUEUE_TTL_SECONDS: "3600"
    EXPIRATION_QUEUE_VISIBILITY_TIMEOUT_SECONDS: "1800"
  envSecret:
    OTEL_EXPORTER_OTLP_HEADERS: elastic-otel-token-header
    EXPIRATION_QUEUE_CONNECTION_STRING: wallet-storage-connection-string
=======
    MONGO_HOST: pagopa-d-itn-pay-wallet-cosmos-account.mongo.cosmos.azure.com
    MONGO_USERNAME: pagopa-d-itn-pay-wallet-cosmos-account
    MONGO_PORT: "10255"
    MONGO_SSL_ENABLED: "true"
    MONGO_DB_NAME: "payment-wallet"
    MONGO_MIN_POOL_SIZE: "0"
    MONGO_MAX_POOL_SIZE: "50"
    MONGO_MAX_IDLE_TIMEOUT_MS: "600000"
    MONGO_CONNECTION_TIMEOUT_MS: "2000"
    MONGO_SOCKET_TIMEOUT_MS: "10000"
    MONGO_SERVER_SELECTION_TIMEOUT_MS: "2000"
    MONGO_WAITING_QUEUE_MS: "2000"
    MONGO_HEARTBEAT_FREQUENCY_MS: "5000"
    CDC_LOG_EVENTS_COLLECTION_NAME: "payment-wallets-log-events"
    CDC_LOG_EVENTS_OPERATION_TYPE: "insert,update,replace"
    CDC_LOG_EVENTS_PROJECT: "fullDocument"
    CDC_SEND_RETRY_MAX_ATTEMPTS: "1"
    CDC_SEND_RETRY_INTERVAL_IN_MS: "1000"
  envSecret:
    OTEL_EXPORTER_OTLP_HEADERS: elastic-otel-token-header
    MONGO_PASSWORD: mongo-wallet-password
>>>>>>> main
  keyvault:
    name: "pagopa-d-pay-wallet-kv"
    tenantId: "7788edaf-0346-4068-9d79-c868aed15b3d"
  nodeSelector: { }
  canaryDelivery:
    deployment:
      image:
        tag: ""
  tolerations:
    - effect: "NoSchedule"
      key: "paymentWalletOnly"
      operator: "Equal"
      value: "true"
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: domain
                operator: In
                values:
                  - paywallet
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            labelSelector:
              matchLabels:
                aadpodidbinding: pay-wallet-pod-identity
            namespaces: [ "pay-wallet" ]
            topologyKey: topology.kubernetes.io/zone
